#!/usr/bin/env python
# -*- mode: landisk-python; coding: utf-8; -*-
# vim:ts=4 sw=4 sts=4 ai si et sta
import datetime


ZERO = datetime.timedelta(0)

class UTC(datetime.tzinfo):

    zone = 'UTC'

    def utcoffset(self, dt):
        return ZERO

    def tzname(self, dt):
        return 'UTC'

    def dst(self, dt):
        return ZERO

    def __reduce__(self):
        return _UTC, ()

    def localize(self, dt, is_dst=False):
        if dt.tzinfo is not None:
            raise ValueError, 'Not naive datetime (tzinfo is already set)'
        return dt.replace(tzinfo=self)

    def normalize(self, dt, is_dst=False):
        if dt.tzinfo is None:
            raise ValueError, 'Naive time - no tzinfo set'
        return dt.replace(tzinfo=self)

    def __repr__(self):
        return '<UTC>'

    def __str__(self):
        return 'UTC'


UTC = utc = UTC()


def _UTC():
    return utc
_UTC.__safe_for_unpacking__ = True



if __name__ == u'__main__':
    pass
    print(datetime.datetime(2017, 4, 1, 12, 30, 40))
    print(datetime.datetime(2017, 4, 1, 12, 30, 40, tzinfo=utc))
