#!/usr/bin/env python
# -*- mode: landisk-python; coding: utf-8; -*-
# vim:ts=4 sw=4 sts=4 ai si et sta

from __future__ import with_statement

from basefilesync import (SrcFull, DstFull, MODE_CH_FILE,
    MODE_CH_DIR, MTIME_NAME, STATE_SAME, DEBUG)
from ionas.exception import *
from ..fileaccess import SmbAccess

import stat


class SmbFileTree(SrcFull, DstFull):
    """Class for the file tree accessed via SMB protocol."""

    def __init__(self, path, user, passwd,
                 ignored_list=[], log_callback=None, tmp_path="",
                 encoding="", is_skip_file_callback=None):
        self.smb_access = SmbAccess(user, passwd, encoding)
        SrcFull.__init__(self, path, ignored_list, log_callback)
        DstFull.__init__(self, path, log_callback, tmp_path,
                         is_skip_file_callback=is_skip_file_callback)

        self.MAX_FILE_SIZE = None

        try:
            self.smb_access.stat(path)
        except NoEntryError:
            raise NoRootEntryError

        self.sep = self.smb_access.sep

    def listdir(self, path):
        return self.smb_access.listdir(path)

    def open(self, path, mode):
        return self.smb_access.open(path, mode)

    def mkdir(self, path):
        self.smb_access.mkdir(path)

    def stat(self, path):
        return self.smb_access.stat(path)

    def chmod(self, path, mode):
        self.smb_access.chmod(path, mode)

    def utime(self, path, mtime):
        self.smb_access.utime(path, mtime)

    def remove(self, path):
        self.smb_access.remove(path)

    def rmdir(self, path):
        self.smb_access.rmdir(path)

    def move(self, src, dst):
        self.smb_access.move(src, dst)

    def post_file_transfer(self, file_relpath, file_info):
        self.utime(self.sep.join([self.root] + file_relpath),
            file_info[MTIME_NAME])
        self.chmod(self.sep.join([self.root] + file_relpath), MODE_CH_FILE)

    def post_dir_create(self, dir_relpath, dir_info):
        self.utime(self.sep.join([self.root] + dir_relpath),
            dir_info[MTIME_NAME])
        self.chmod(self.sep.join([self.root] + dir_relpath), MODE_CH_DIR)
